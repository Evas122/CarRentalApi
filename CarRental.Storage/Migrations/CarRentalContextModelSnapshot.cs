// <auto-generated />
using CarRental.Storage.Data_Acces_Layer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRental.Storage.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    partial class CarRentalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarRental.Storage.Entities.CarModel", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"), 1L, 1);

                    b.Property<int>("AvailableModels")
                        .HasColumnType("int");

                    b.Property<double>("AverageFuelConsumption")
                        .HasColumnType("float");

                    b.Property<string>("CarLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerDay")
                        .HasColumnType("float");

                    b.HasKey("CarId");

                    b.ToTable("Cars", (string)null);

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            AvailableModels = 7,
                            AverageFuelConsumption = 6.7000000000000002,
                            CarLocation = "Rzeszów",
                            Name = "car1",
                            PriceCategory = "Basic",
                            PricePerDay = 360.0
                        },
                        new
                        {
                            CarId = 2,
                            AvailableModels = 1,
                            AverageFuelConsumption = 8.1999999999999993,
                            CarLocation = "Rzeszów",
                            Name = "car2",
                            PriceCategory = "Standard",
                            PricePerDay = 460.0
                        },
                        new
                        {
                            CarId = 3,
                            AvailableModels = 5,
                            AverageFuelConsumption = 5.2999999999999998,
                            CarLocation = "Warszawa",
                            Name = "car3",
                            PriceCategory = "Medium",
                            PricePerDay = 525.0
                        },
                        new
                        {
                            CarId = 4,
                            AvailableModels = 2,
                            AverageFuelConsumption = 12.1,
                            CarLocation = "Rzeszów",
                            Name = "car4",
                            PriceCategory = "Premium",
                            PricePerDay = 754.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
